machine:
  timezone: UTC
  services:
    - docker
  ruby:
    version: 2.2.2
  environment:
    SPEC_OPTS: "--format documentation --color --format RspecJunitFormatter --out $CIRCLE_TEST_REPORTS/rspec/rspec.xml"
    DOCKER_REPO: quay.io/atsnngs/docker-rails-example
  pre:
    - "echo 'Host *' >> $HOME/.ssh/config"
    - "echo 'ForwardAgent yes' >> $HOME/.ssh/config"
    - "git config --global user.name 'Circle CI'"
    - "git config --global user.email 'circleci@ngs.io'"
general:
  artifacts:
    - log
dependencies:
  cache_directories:
    - ~/docker
    - docker/serverspec/vendor/bundle
  override:
    - sudo pip install awscli
    - bundle check --path=vendor/bundle || bundle install --path=vendor/bundle --jobs=4 --retry=3
    - docker info
    - if [[ -e ~/docker/images.tar ]]; then docker load --input ~/docker/images.tar; fi; echo ''
    - docker pull ubuntu:14.04
    - docker pull redis
    - docker pull mysql
    - docker pull -a $DOCKER_REPO
    - mkdir -p ~/docker && docker save -o ~/docker/images.tar "${DOCKER_REPO}:job" "${DOCKER_REPO}:web" redis mysql; echo ''
    - docker run --name dev-redis -d redis
    - docker run --name dev-mysql -e 'MYSQL_ROOT_PASSWORD=dev' -d mysql
    - docker ps
    - bin/rake assets:precompile
    - DATABASE_URL=mysql2://root:dev@dev-mysql/docker-rails-example ROLE=web ./script/build-docker.sh
    - DATABASE_URL=mysql2://root:dev@dev-mysql/docker-rails-example ROLE=job ./script/build-docker.sh
    - docker run --name serverspec-bundle-install -v "$(pwd)/docker/serverspec"\:/mnt/serverspec -w /mnt/serverspec -t "${DOCKER_REPO}:job" bundle install --path=vendor/bundle
test:
  pre:
  override:
    - bin/rake test
    - TARGET="${DOCKER_REPO}:web" script/run-server-spec.sh
    - TARGET="${DOCKER_REPO}:job" script/run-server-spec.sh
deployment:
  master:
    branch: master
    commands:
      - docker login -e $DOCKER_EMAIL -u $DOCKER_USER -p $DOCKER_PASS $DOCKER_REPO_HOST
      - docker push "${DOCKER_REPO}:web"
      - docker push "${DOCKER_REPO}:job"
  stages:
    branch: /deployment\/.*/
    commands:
      - docker login -e $DOCKER_EMAIL -u $DOCKER_USER -p $DOCKER_PASS $DOCKER_REPO_HOST
      - export ENV_NAME=`echo $CIRCLE_BRANCH | sed 's/deployment\///'` && /bin/sh script/deploy.sh
